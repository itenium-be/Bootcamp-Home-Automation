# Want to use this?
# Update the api.encryption.key + set a unique wifi.manual_ip.static_ip !!
# (generated during the steps in "ESP Flashing")

esphome:
  name: huisje1
  friendly_name: Huisje1

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "WLjG7FBFSudeIk7id20B3jQAyfkVb0Jmc+qxqtHw434="

ota:
  - platform: esphome
    password: "ca4a6b4bafa2d947aa8996746937e9c4"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.0.123
    gateway: 172.16.10.254
    subnet: 255.255.252.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Itenium2025"
    password: "DenBerg1840!"

captive_portal:

web_server:
  port: 80

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    name: "Left Button"

  - platform: gpio
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
      inverted: true
    name: "Right Button"

  - platform: gpio
    pin:
      number: GPIO34
      inverted: false
    name: "Steam"

  - platform: gpio
    pin:
      number: GPIO14
      inverted: false
    name: "Motion Sensor"
    device_class: motion


light:
  - platform: monochromatic
    name: "LED"
    output: led

output:
  - platform: ledc
    id: led
    pin: GPIO12

  - platform: ledc
    pin: GPIO25
    id: buzzer_output

switch:
  - platform: template
    name: "Buzzer Switch"
    optimistic: true
    turn_on_action:
      - output.turn_on: buzzer_output
      - output.ledc.set_frequency:
          id: buzzer_output
          frequency: 2000Hz  # Adjust frequency as needed
      - output.set_level:
          id: buzzer_output
          level: 15%  # Adjust volume as needed
    turn_off_action:
      - output.turn_off: buzzer_output
